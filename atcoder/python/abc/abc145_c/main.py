#!/usr/bin/env python3
# from typing import *
import itertools, math

# def solve(N: int, x: List[int], y: List[int]) -> float:
def solve(N, x, y):
    town = [int(i) for i in range(N)]
    sum = 0
    for pattern in itertools.permutations(town):
        for i in range(1, len(pattern)):
            sum += math.sqrt((x[pattern[i-1]]-x[pattern[i]])**2 + (y[pattern[i-1]]-y[pattern[i]])**2)
    return sum / math.factorial(N)

# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    N = int(input())
    x = [None for _ in range(N)]
    y = [None for _ in range(N)]
    for i in range(N):
        x[i], y[i] = map(int, input().split())
    a = solve(N, x, y)
    print(a)


if __name__ == '__main__':
    main()
