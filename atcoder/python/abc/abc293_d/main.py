#!/usr/bin/env python3
# from typing import *
import sys
sys.setrecursionlimit(10**6)

# def solve(N: str, M: str, A: List[str], B: List[str], C: List[str], D: List[str]) -> Tuple[int, int]:
def solve(N, M, A, B, C, D):
    # 色は関係ないため、BとDは使わない
    l = [-1 for _ in range(N)]
    for i in range(M):
        l[int(A[i])-1] = int(C[i])-1
    start_flag = [False]*N
    count_l = [0, 0]
    for i in range(N):
        if not start_flag[i]:
            dfs(l, i, [False]*N, start_flag, count_l, 0)
    return count_l[0], count_l[1]

def dfs(l, i, flag_l, start_flag, count_l, count):
    flag_l[i] = True
    start_flag[i] = True
    if l[i] == -1:
        count_l[1] += 1 - count
        return
    if flag_l[l[i]] == True:
        count_l[0] += 1
        return
    if not start_flag[l[i]]:
        count += 1
    dfs(l, l[i], flag_l, start_flag, count_l, count)


# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    N, M = map(int, input().split())
    A = [None for _ in range(M)]
    B = [None for _ in range(M)]
    C = [None for _ in range(M)]
    D = [None for _ in range(M)]
    for i in range(M):
        A[i], B[i], C[i], D[i] = input().split()
    c, d = solve(N, M, A, B, C, D)
    print(c, d)


if __name__ == '__main__':
    main()
