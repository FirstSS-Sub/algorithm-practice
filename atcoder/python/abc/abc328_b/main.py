#!/usr/bin/env python3
# from typing import *


# def solve(N: int, D: List[int]) -> int:
def solve(N, D):
    ans = 0
    for i in range(1, N+1):
        for n in range(1, D[i-1]+1):
            if i <= 9:
                if n / i == 1 or n / i == 11:
                    ans += 1
            else:
                if i / n == 11 or (i / n == 1 and i % 11 == 0):
                    ans += 1
                    
    return ans


# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    import sys
    tokens = iter(sys.stdin.read().split())
    N = int(next(tokens))
    D = [None for _ in range(N)]
    for i in range(N):
        D[i] = int(next(tokens))
    assert next(tokens, None) is None
    a = solve(N, D)
    print(a)


if __name__ == '__main__':
    main()
