#!/usr/bin/env python3
# from typing import *


# def solve(N: int, P: List[int], Q: int, A: List[int], B: List[int]) -> List[str]:
def solve(N, P, Q, A, B):
    d = {}
    for i, p in enumerate(P):
        d[p] = i+1
    for i in range(Q):
        if d[A[i]] < d[B[i]]:
            print(A[i])
        else:
            print(B[i])


# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    import sys
    tokens = iter(sys.stdin.read().split())
    N = int(next(tokens))
    P = [None for _ in range(N)]
    for i in range(N):
        P[i] = int(next(tokens))
    Q = int(next(tokens))
    A = [None for _ in range(Q)]
    B = [None for _ in range(Q)]
    for i in range(Q):
        A[i] = int(next(tokens))
        B[i] = int(next(tokens))
    assert next(tokens, None) is None
    solve(N, P, Q, A, B)


if __name__ == '__main__':
    main()
