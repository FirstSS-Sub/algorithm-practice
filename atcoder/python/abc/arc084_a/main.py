#!/usr/bin/env python3
# from typing import *
import bisect


# def solve(N: int, A: List[int], B: List[int], C: List[int]) -> int:
def solve(N, A, B, C):
    A.sort()
    C.sort()
    ans = 0
    for b in B:
        a = bisect.bisect_left(A, b)
        c = N - bisect.bisect_right(C, b)
        ans += a*c
    return ans


# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    import sys
    tokens = iter(sys.stdin.read().split())
    N = int(next(tokens))
    A = [None for _ in range(N)]
    B = [None for _ in range(N)]
    C = [None for _ in range(N)]
    for i in range(N):
        A[i] = int(next(tokens))
    for i in range(N):
        B[i] = int(next(tokens))
    for i in range(N):
        C[i] = int(next(tokens))
    assert next(tokens, None) is None
    a = solve(N, A, B, C)
    print(a)


if __name__ == '__main__':
    main()
