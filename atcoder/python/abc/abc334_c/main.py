#!/usr/bin/env python3
# from typing import *


# def solve(N: int, K: int, A: List[int]) -> int:
def solve(N, K, A):
    ans = 0
    if K % 2 == 0:
        for i in range(1, K, 2):
            ans += A[i]-A[i-1]
    else:
        if N == 1: return 0
        l = []
        r = [0]
        tmp_l = 0
        tmp_r = 0
        for i in range(1, K, 2):
            tmp_l += A[i]-A[i-1]
            tmp_r += A[i+1]-A[i]
        for i in range(K-1, 1, -2):
            tmp_r += A[i]-A[i-1]
            l.append(tmp_l)
            r.append(tmp_r)
        l.append(0)
        ans = 10**6
        for i in range(K):
            tmp = sum(l[:(i//2)]) + sum(r[(i//2):])
            if ans > tmp:
                ans = tmp
    return ans

# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    import sys
    tokens = iter(sys.stdin.read().split())
    N = int(next(tokens))
    K = int(next(tokens))
    A = [None for _ in range(K)]
    for i in range(K):
        A[i] = int(next(tokens))
    assert next(tokens, None) is None
    a = solve(N, K, A)
    print(a)


if __name__ == '__main__':
    main()
