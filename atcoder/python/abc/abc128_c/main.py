#!/usr/bin/env python3
# from typing import *


# def solve(a: int, b: int, c: List[int], d: List[List[int]], e: List[int]) -> int:
def solve(n, m, k, p):
    ans = 0
    for bit in range(1 << n):
        l = [0] * n
        flag = True
        for i in range(n):
            # 下からi番目にbitが立っているとき
            if bit & (1 << i):
                l[i] = 1
        for i, sl in enumerate(k):
            # 1つの電球に対してつながっているスイッチのうち、ONになっている個数
            count = 0
            for s in sl:
                if l[s-1] == 1:
                    count += 1
            if count % 2 != p[i]:
                flag = False
                break
        if flag:
            ans += 1
    return ans
        

# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    import sys
    tokens = iter(sys.stdin.read().split())
    n = int(next(tokens))
    m = int(next(tokens))
    k = []
    for i in range(m):
        kt = int(next(tokens))
        k.append([int(next(tokens)) for _ in range(kt)])
    p = [int(next(tokens)) for _ in range(m)]
    assert next(tokens, None) is None
    a1 = solve(n, m, k, p)
    print(a1)


if __name__ == '__main__':
    main()
