#!/usr/bin/env python3
# from typing import *
import sys
sys.setrecursionlimit(10**8)

# def solve(N: int, M: int, S: List[str]) -> int:
def solve(N, M, S):
    stop = [[False]*M for _ in range(N)]
    through = [[False]*M for _ in range(N)]
    
    through[1][1] = True
    dfs(1, 1, stop, through, S)
    return sum(sum(x) for x in through)

def dfs(i, j, stop, through, S):
    stop[i][j] = True
    # マス(i,j)に停止している状態から、上下左右への移動を調べる
    for di, dj in [(0, 1), (1, 0), (0, -1), (-1, 0)]:
        ii, jj = i, j
        while S[ii + di][jj + dj] != '#':
            ii += di
            jj += dj
            through[ii][jj] = True
        if not stop[ii][jj]:
            dfs(ii, jj, stop, through, S)
            

# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    N, M = map(int, input().split())
    S = [None for _ in range(N)]
    for i in range(N):
        S[i] = input()
    a = solve(N, M, S)
    print(a)


if __name__ == '__main__':
    main()
