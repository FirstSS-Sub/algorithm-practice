#!/usr/bin/env python3
# from typing import *
from collections import defaultdict

# def solve(N: int, M: int, X: List[int]) -> int:
def solve(N, M, X):
    v = defaultdict(int)
    for i in range(M-1):
        ad(X[i], X[i+1], X[i]-X[i+1] if X[i]>=X[i+1] else X[i]+N-X[i+1], v, N)
        ad(X[i+1], X[i], X[i+1]-X[i] if X[i+1]>=X[i] else X[i+1]+N-X[i], v, N)
    ans = 10**11
    for i in range(N):
        v[i+1] = v[i+1] + v[i]
        ans = min(ans, v[i])
    return ans

def ad(s, g, num, v, N):
    if (s <= g):
        v[s] += num
        v[g] -= num
    else:
        v[s] += num
        v[N] -= num
        v[0] += num
        v[g] -= num

# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    import sys
    tokens = iter(sys.stdin.read().split())
    N = int(next(tokens))
    M = int(next(tokens))
    X = [None for _ in range(M)]
    for i in range(M):
        X[i] = int(next(tokens))
    assert next(tokens, None) is None
    a = solve(N, M, X)
    print(a)


if __name__ == '__main__':
    main()
