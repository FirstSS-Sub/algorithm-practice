#!/usr/bin/env python3
# from typing import *


# def solve(N: int, a: List[int], b: List[int], c: List[int]) -> int:
def solve(N, a, b, c):
    dp = [{"A": 0, "B": 0, "C": 0} for _ in range(N)]
    dp[0]["A"] = a[0]
    dp[0]["B"] = b[0]
    dp[0]["C"] = c[0]
    for i in range(1, N):
        # a
        if dp[i-1]["B"] >= dp[i-1]["C"]:
            dp[i]["A"] = dp[i-1]["B"] + a[i]
        else:
            dp[i]["A"] = dp[i-1]["C"] + a[i]
        # b
        if dp[i-1]["C"] >= dp[i-1]["A"]:
            dp[i]["B"] = dp[i-1]["C"] + b[i]
        else:
            dp[i]["B"] = dp[i-1]["A"] + b[i]
        # c
        if dp[i-1]["A"] >= dp[i-1]["B"]:
            dp[i]["C"] = dp[i-1]["A"] + c[i]
        else:
            dp[i]["C"] = dp[i-1]["B"] + c[i]
    return max(dp[N-1].values())


# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    N = int(input())
    a = [None for _ in range(N)]
    b = [None for _ in range(N)]
    c = [None for _ in range(N)]
    for i in range(N):
        a[i], b[i], c[i] = map(int, input().split())
    a1 = solve(N, a, b, c)
    print(a1)


if __name__ == '__main__':
    main()
